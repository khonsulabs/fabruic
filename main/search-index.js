var searchIndex = JSON.parse('{\
"fabruic":{"doc":"TODO","tn":["Builder","Certificate","Connecting","Connection","Dangerous","Endpoint","Incoming","PrivateKey","Receiver","Sender","accept","accept","add_ca","add_key_pair","as_bits","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","close","close","close","close_incoming","close_incoming","cmp","cmp","connect","connect_with","default","deserialize","deserialize","drop","eq","eq","equivalent","equivalent","error","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_der","from_der","generate_self_signed","hash","hash","into","into","into","into","into","into","into","into","into","into","into","is_terminated","is_terminated","local_address","ne","ne","new","new_client","new_server","open_stream","partial_cmp","partial_cmp","poll_next","poll_next","poll_next","protocol","protocol","remote_address","send","serialize","serialize","serialize","serialize","set_address","set_address_str","set_protocols","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_poll_next","type","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_from_der","unchecked_from_der","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_idle","zeroize","AddrParseError","AlertReceived","AlreadyClosed","ApplicationClosed","BadDER","BadDERTime","BindSocket","CAUsedAsEndEntity","CertExpired","CertNotValidForName","CertNotValidYet","Certificate","Config","ConnectConfig","ConnectError","Connecting","ConnectionClosed","ConnectionClosed","ConnectionClosed","ConnectionError","CorruptMessage","CorruptMessagePayload","Custom","DanglingCertificate","DecryptError","Der","Deserialize","DeserializeAnyNotSupported","DomainCertificate","DuplicateAttributes","DuplicateExtensions","EndEntityUsedAsCA","EndpointError","EndpointStopping","Err","Error","Error","ErrorKind","ExpiredCertificate","ExtensionValueInvalid","FailedToGetCurrentTime","Failure","Finish","General","Generic","HandshakeNotComplete","IllegalOrderedRead","InappropriateHandshakeMessage","InappropriateMessage","Incomplete","InvalidAlgorithmIdentifier","InvalidAttributes","InvalidBoolEncoding","InvalidCertValidity","InvalidCertificate","InvalidCertificate","InvalidCharEncoding","InvalidDate","InvalidDnsName","InvalidExtensions","InvalidIssuerUID","InvalidKeyPair","InvalidRemoteAddress","InvalidSCT","InvalidSPKI","InvalidSerial","InvalidSignatureForPublicKey","InvalidSignatureValue","InvalidSubjectUID","InvalidTagEncoding","InvalidTbsCertificate","InvalidUserCertificate","InvalidUtf8Encoding","InvalidVersion","InvalidX509Name","Io","IoError","KeyRejected","LocalAddress","LocallyClosed","NameConstraintViolation","NoApplicationProtocol","NoCertificatesPresented","NoIp","NoType","NomError","OpenStream","ParseAddress","ParseCertificate","ParseCertificate","ParseError","ParsePrivateKey","PathLenConstraintViolated","PeerIncompatibleError","PeerMisbehavedError","PeerSentOversizedRecord","PrivateKey","Read","ReadError","ReceiveStream","RequiredEKUNotFound","Reset","Reset","Resolve","ResolveError","Result","Send","SequenceMustHaveLength","Serialize","SignatureAlgorithmMismatch","SignatureUnsupportedAlgorithm","SignatureVerificationError","SizeLimit","Socket","Stopped","TLSError","TimedOut","TooManyConnections","TransportError","UnknownIssuer","UnknownStream","UnknownStream","UnsupportedCertVersion","UnsupportedCriticalExtension","UnsupportedSignatureAlgorithm","UnsupportedSignatureAlgorithmForPublicKey","VersionMismatch","WebPKIError","WebPki","WebPkiError","Write","WriteError","X509","X509Error","ZeroRttRejected","ZeroRttRejected","append","attempted","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","cause","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","convert","description","description","description","description","description_","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_error_kind","from_raw_os_error","from_response","get_mut","get_ref","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","is_incomplete","kind","kind","last_os_error","map","map_input","ne","ne","ne","ne","ne","ne","ne","ne","new","raw_os_error","should_retry","source","source","source","source","source","source","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","certificate","certificate","dangling","error","expect_types","expect_types","got_type","got_type"],"q":["fabruicfabruic::errorfabruic::error::Error","","","","fabruic::error::TLSError","","",""],"d":["Holding configuration for [<code>Builder</code>] to build [<code>Endpoint</code>].","A public Certificate. You can distribute it freely to …","Represent’s an intermediate state to build a [<code>Connection</code>…","Represents an open connection. Receives [<code>Incoming</code>] …","Gives read access to the [<code>PrivateKey</code>].","Represents a socket using the QUIC protocol to …","An intermediate state to define which type to accept in …","A private Key.","Used to receive data from a stream.","Used to send data to a stream.","Accept the incoming stream with the given types.","Accept the [<code>Connection</code>] with the given <code>T</code> as the type …","Adds a [<code>Certificate</code>] as a certificate authority for client…","Add a [<code>Certificate</code>] and [<code>PrivateKey</code>] for the server. This …","","Returns a <code>&[u8]</code> to the [<code>PrivateKey</code>].","","","","","","","","","","","","","","","","","","","","","Consumes [<code>Builder</code>] to build [<code>Endpoint</code>]. Must be called …","Builds a new [<code>Builder</code>]. See [<code>Builder</code>] methods for …","","","","","","","","","","","","","Close the [<code>Receiver</code>] immediately. To close a [<code>Receiver</code>] …","Close the [<code>Sender</code>] immediately.","Close the [<code>Connection</code>] immediately.","Close all of this [<code>Endpoint</code>]’s <code>Connection</code>s immediately …","Prevents any new incoming streams. Already incoming …","Prevents any new incoming connections. Already incoming …","","","Establish a new <code>Connection</code> to a client. The <code>domain</code> …","Attempts to resolve the IP with the given domain name. …","","","","","","","","","<code>Error</code> for this [<code>crate</code>].","Wait for the [<code>Receiver</code>] part of the stream to finish …","Shut down the [<code>Send</code>] part of the stream gracefully.","","","","","","","","","","","","","","","","","","","Build [<code>Certificate</code>] from DER-format. This is not meant as …","Build [<code>PrivateKey</code>] from DER-format. This is not meant as …","Generate a self signed certificate.","","","Returns a [<code>Vec<u8></code>] to the [<code>PrivateKey</code>].","","","","","","","","","","","","","Get the local [<code>SocketAddr</code>] the underlying socket is bound …","","","Builds a new [<code>Builder</code>]. See [<code>Builder</code>] methods for …","Simplified version of creating a client. See [<code>Builder</code>] …","Simplified version of creating a server. See [<code>Builder</code>] …","Open a stream on this [<code>Connection</code>], allowing to send data …","","","","","","The negotiated application protocol. See …","The negotiated application protocol. See …","The peer’s address. Clients may change addresses at …","Send <code>data</code> into the stream.","Serialize with [<code>serde</code>].","","","","Set’s the [<code>SocketAddr</code>]. Default is “[::]:0”.","Set’s the [<code>SocketAddr</code>]. Default is “[::]:0”.","Set the application-layer protocols to accept, in order …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the type information for that stream.","","","","","","","","","","Build [<code>Certificate</code>] from DER-format. This skips the …","Build [<code>PrivateKey</code>] from DER-format. This skips the …","","","","","","","","","","Wait for all <code>Connection</code>s to the [<code>Endpoint</code>] to be cleanly …","","An error which can be returned when parsing an IP address …","We received a fatal alert.  This means the peer is …","Attempting to close something that is already closed.","The peer closed the connection","The encoding of some ASN.1 DER-encoded item is invalid.","The encoding of an ASN.1 DER-encoded time is invalid.","Returned by <code>Endpoint</code> when failing to bind the socket on …","A CA certificate is veing used as an end-entity …","The certificate is expired; i.e. the time it is being …","The certificate is not valid for the name it is being …","The certificate is not valid yet; i.e. the time it is …","Returned by <code>Endpoint</code> when failing to parse the given …","The transport configuration was invalid","Returned by <code>Endpoint::connect</code> if configuration needed to …","Errors in the parameters being used to create a new …","Returned by <code>Connecting::accept</code> if connecting to the peer …","The connection was closed.","The connection was closed.","The peer’s QUIC stack aborted the connection …","Reasons why a connection might be lost","The peer sent us a syntactically incorrect TLS message.","The peer sent us a TLS message with invalid contents.","A custom error message from Serde.","Data passed to generate <code>Certificate</code> with <code>from_der</code> found …","We couldn’t decrypt a message.  This is invariably …","","Returned by <code>Receiver::finish</code> if <code>Receiver</code> failed to …","Serde has a deserialize_any method that lets the format …","<code>Certificate</code> is missing a domain name.","","","An end-entity certificate is being used as a CA …","Errors that can occur during the construction of an …","The endpoint can no longer create new connections","The <code>Err</code> enum indicates the parser was not successful","<code>Error</code> for this [<code>crate</code>].","The parser had an error (recoverable)","The kind of error that can be produced during a …","<code>Certificate</code> has expired.","An X.509 extension is invalid.","We failed to figure out what time it currently is.","The parser had an unrecoverable error: we got to the right…","Returned by <code>Sender::finish</code> if <code>Sender</code> failed to finish a …","A catch-all error for unlikely errors.","","This function doesn’t work until the TLS handshake is …","Attempted an ordered read following an unordered read","We received a TLS handshake message that isn’t valid …","We received a TLS message that isn’t valid right now. …","There was not enough data","","","Returned if the deserializer attempts to deserialize a …","The certificate validity period (notBefore, notAfter) is …","Returned by <code>Endpoint</code> when failing to add the given …","Top-level certificate structure is invalid","Returned if the deserializer attempts to deserialize a …","","The domain name supplied was malformed","","","Returned by <code>Endpoint</code> when failing to pair the given …","The remote [<code>SocketAddr</code>] supplied was malformed","The presented SCT(s) were invalid.","","","The signature is invalid for the given public key.","","","Returned if the deserializer attempts to deserialize the …","","","Returned if the deserializer attempts to deserialize a …","","","If the error stems from the reader/writer that is being …","The error type for I/O operations of the <code>Read</code>, <code>Write</code>, <code>Seek</code>…","An error parsing or validating a key.","Returned by <code>Endpoint::local_address</code> when failing to …","The local application closed the connection","The certificate violates one or more name constraints.","An incoming connection did not support any known …","The peer didn’t give us any certificates.","Found no IP address for that domain.","Returned by <code>Incoming::type</code> if the peer closed the stream …","","Returned by <code>Connection::open_stream</code> if opening a stream …","Parsing a <code>SocketAddr</code> from a [<code>str</code>] failed.","Possible certificate parsing errors.","Failed to parse the given certificate.","Errors encountered while parsing a TLS certificate or …","Failed to parse the given private key.","The certificate violates one or more path length …","The peer doesn’t support a protocol version/feature we …","The peer deviated from the standard TLS protocol. The …","The peer sent an oversized record/fragment.","Returned by <code>Endpoint</code> when failing to parse the given …","Returned by <code>Receiver::close</code> if <code>Receiver</code> failed to read …","Errors that arise from reading from a stream.","Returned by <code>Connection</code> <code>Stream</code> when receiving a new stream …","The certificate is not valid for the Extended Key Usage …","The peer abandoned transmitting data on this stream.","The peer is unable to continue processing this …","Failed to resolve domain to IP address.","The error type for errors that get returned in the crate","<code>Result</code> type for this [<code>crate</code>].","Returned by <code>Sender::send</code> if the stream was closed by …","Bincode can not encode sequences of unknown length (like …","Returned by <code>Sender::send</code> if <code>serialization</code> failed.","The algorithm in the TBSCertificate “signature” field …","","","If (de)serializing a message takes more than the provided …","An error during setup of the underlying UDP socket.","The peer is no longer accepting data on this stream.","rustls reports protocol errors using this type.","Communication with the peer has lapsed for longer than …","The number of active connections on the local endpoint is …","The peer violated the QUIC specification as understood by …","A valid issuer for the certificate could not be found.","The stream has already been stopped, finished, or reset","The stream has already been finished or reset","The certificate is not a v3 X.509 certificate.","The certificate contains an unsupported critical …","The signature algorithm for a signature is not in the set …","The signature’s algorithm does not match the algorithm …","The peer doesn’t implement any supported version","The presented certificate chain is invalid.","<code>Error</code> returned by [<code>webpki</code>].","An error that occurs during certificate validation or …","Returned by <code>Sender::finish</code> if <code>Sender</code> failed to write into …","Errors that arise from writing to a stream","<code>Error</code> returned by [<code>x509_parser</code>].","An error that can occur while parsing or validating a …","This was a 0-RTT stream and the server rejected it.","This was a 0-RTT stream and the server rejected it.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Automatically converts between errors if the underlying …","","","","","The value returned from ::description()","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a [<code>NulError</code>] into a [<code>io::Error</code>].","","","","","","","","","","Converts an [<code>ErrorKind</code>] into an [<code>Error</code>].","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new instance of an [<code>Error</code>] from a particular OS …","A conversion to determine if the response is an error","Returns a mutable reference to the inner error wrapped by …","Returns a reference to the inner error wrapped by this …","","","","","","","","","","","","","","","","","","Consumes the <code>Error</code>, returning its inner error (if any).","Tests if the result is Incomplete","Returns the corresponding [<code>ErrorKind</code>] for this error.","Get the kind of the error","Returns an error representing the last OS error which …","Applies the given function to the inner error","Maps <code>Err<(T, ErrorKind)></code> to <code>Err<(U, ErrorKind)></code> with the …","","","","","","","","","Creates a new I/O error from a known kind of error as …","Returns the OS error that this error represents (if any).","","","","","","","","","","","","","","Obtaining ownership","Automatically converts between errors if the underlying …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The certificate passed to <code>from_der</code>.","The certificate passed to <code>from_der</code>.","The dangling bytes.","The parsing error.","Which types we expected","Which handshake type we expected","What type we received","What handshake type we received"],"i":[0,0,0,0,0,0,0,0,0,0,1,2,3,3,4,5,4,6,1,3,4,6,2,7,8,9,10,1,3,4,6,2,7,8,9,10,3,10,4,6,7,8,9,10,4,6,7,8,9,10,7,8,9,10,9,10,4,6,10,10,3,4,6,6,4,6,4,6,0,7,8,1,3,4,6,2,7,8,9,10,1,3,4,6,2,7,8,9,10,4,6,0,4,6,5,1,3,4,6,6,2,7,8,9,10,9,10,10,4,6,3,10,10,9,4,6,7,9,10,2,9,9,8,5,4,6,6,3,3,3,4,6,7,8,9,10,1,3,4,6,2,7,8,9,10,1,3,4,6,2,7,8,9,10,7,1,1,3,4,6,2,7,8,9,10,4,6,1,3,4,6,2,7,8,9,10,10,6,0,11,12,13,14,14,12,14,14,14,14,12,15,12,0,12,16,17,13,0,11,11,18,12,11,19,12,18,12,19,19,14,0,15,0,0,20,0,12,14,11,20,12,11,19,11,16,11,11,20,19,19,18,14,12,19,18,19,15,19,19,12,15,11,19,19,14,19,19,18,19,19,18,19,19,18,0,0,12,13,14,11,11,12,12,19,12,12,0,12,0,12,14,11,11,11,12,12,0,12,14,16,13,12,0,0,12,18,12,14,19,19,18,21,17,0,13,15,13,14,16,17,14,14,14,14,13,11,22,0,12,0,22,0,16,17,19,23,12,22,24,25,11,14,26,19,20,18,21,16,17,13,27,15,23,12,22,24,25,11,14,26,19,20,18,21,16,17,13,27,15,23,24,26,18,25,11,14,26,20,16,17,13,27,15,23,25,11,14,26,20,16,17,13,27,15,23,20,24,25,26,18,26,25,11,14,19,20,16,17,13,15,25,20,16,17,13,15,12,12,22,22,24,24,25,25,11,11,14,14,26,26,19,19,20,20,18,18,21,21,16,16,17,17,13,13,27,27,15,15,23,23,12,22,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,25,11,14,26,19,19,19,20,20,20,18,21,16,16,17,13,13,13,27,15,23,23,23,23,23,23,23,19,24,23,24,24,12,22,24,25,11,14,26,19,20,18,21,16,17,13,27,15,23,24,20,24,23,24,20,20,25,11,19,20,16,17,13,15,24,24,23,22,24,19,20,17,13,15,25,11,14,26,20,20,20,16,17,13,27,15,23,12,22,24,25,11,14,26,19,20,18,21,16,17,13,27,15,23,12,22,24,25,11,14,26,19,20,18,21,16,17,13,27,15,23,12,22,24,25,11,14,26,19,20,18,21,16,17,13,27,15,23,12,22,24,25,11,14,26,19,20,18,21,16,17,13,27,15,23,12,22,24,25,11,14,26,19,20,18,21,16,17,13,27,15,23,28,29,29,28,30,31,30,31],"f":[null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["certificate",3]],["result",6]],[[["privatekey",3],["certificate",3]],["result",6]],[[],["bitslice",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["result",6],["endpoint",3]]],[[],["builder",3]],[[],["certificate",3]],[[],["privatekey",3]],[[],["receiver",3]],[[],["sender",3]],[[],["connection",3]],[[],["endpoint",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["certificate",3]],["ordering",4]],[[["privatekey",3]],["ordering",4]],[[["socketaddr",4],["str",15],["asref",8]],[["result",6],["connecting",3]]],[[["asref",8],["u16",15],["str",15]]],[[]],[[],["result",4]],[[],["result",4]],[[]],[[["certificate",3]],["bool",15]],[[["privatekey",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["vec",3],["u8",15]],["result",6]],[[["vec",3],["u8",15]],["result",6]],[[["string",3],["into",8]]],[[]],[[]],[[],[["vec",3],["u8",15]]],[[]],[[]],[[]],[[],[["vec",3],["u8",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],[["socketaddr",4],["result",6]]],[[["certificate",3]],["bool",15]],[[["privatekey",3]],["bool",15]],[[]],[[["certificate",3]],["result",6]],[[["privatekey",3],["u16",15],["certificate",3]],["result",6]],[[]],[[["certificate",3]],[["ordering",4],["option",4]]],[[["privatekey",3]],[["ordering",4],["option",4]]],[[["context",3],["pin",3]],[["poll",4],["option",4]]],[[["context",3],["pin",3]],[["poll",4],["option",4]]],[[["context",3],["pin",3]],[["poll",4],["option",4]]],[[]],[[],[["option",4],["vec",3]]],[[],["socketaddr",4]],[[],["result",6]],[[["serializer",8]],["result",6]],[[],["result",4]],[[["serializer",8]],["result",6]],[[],["result",4]],[[["socketaddr",4]]],[[["str",15]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],[["option",4],["poll",4]]],[[]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["vec",3],["u8",15]]],[[["vec",3],["u8",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["errorkind",4],["x509error",4]],["x509error",4]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["error",8],["option",4]]],[[],[["error",8],["option",4]]],[[],[["error",8],["option",4]]],[[],["addrparseerror",3]],[[],["tlserror",4]],[[],["error",4]],[[],["keyrejected",3]],[[],["err",4]],[[],["readerror",4]],[[],["writeerror",4]],[[],["connectionerror",4]],[[],["parseerror",3]],[[],["connecterror",4]],[[],["resolveerror",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["err",4]],["err",4]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[["addrparseerror",3]],["bool",15]],[[["tlserror",4]],["bool",15]],[[["error",4]],["bool",15]],[[["x509error",4]],["bool",15]],[[["err",4]],["bool",15]],[[["readerror",4]],["bool",15]],[[["writeerror",4]],["bool",15]],[[["connectionerror",4]],["bool",15]],[[["connecterror",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[]],[[]],[[["readerror",4]],["error",3]],[[["writeerror",4]],["error",3]],[[["nulerror",3]],["error",3]],[[["intoinnererror",3]],["error",3]],[[["elapsed",3]],["error",3]],[[["joinerror",3]],["error",3]],[[["error",3]],["error",3]],[[]],[[["connectionerror",4]],["error",3]],[[["asn1error",3]],["error",3]],[[["error",3]],["error",3]],[[["resolveerror",3]],["error",3]],[[["errorkind",4]],["error",3]],[[["protoerror",3]],["error",3]],[[["error",3]],["error",3]],[[]],[[]],[[]],[[]],[[]],[[["bererror",4]],["x509error",4]],[[["errorkind",4]],["x509error",4]],[[]],[[["x509error",4]],[["err",4],["x509error",4]]],[[["bererror",4]],[["err",4],["bererror",4]]],[[]],[[]],[[["readableerror",4]],["readerror",4]],[[]],[[]],[[["error",3]],["connectionerror",4]],[[]],[[["close",4]],["connectionerror",4]],[[]],[[]],[[["str",15]],["resolveerror",3]],[[["error",3]],["resolveerror",3]],[[["poisonerror",3]],["resolveerror",3]],[[["protoerror",3]],["resolveerror",3]],[[]],[[["string",3]],["resolveerror",3]],[[["resolveerrorkind",4]],["resolveerror",3]],[[["errorkind",4]],["x509error",4]],[[["i32",15]],["error",3]],[[["bool",15],["dnsresponse",3]],[["resolveerror",3],["result",4],["dnsresponse",3]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["box",3],["option",4]]],[[],["bool",15]],[[],["errorkind",4]],[[],["resolveerrorkind",4]],[[],["error",3]],[[],["err",4]],[[],["err",4]],[[["addrparseerror",3]],["bool",15]],[[["tlserror",4]],["bool",15]],[[["x509error",4]],["bool",15]],[[["err",4]],["bool",15]],[[["readerror",4]],["bool",15]],[[["writeerror",4]],["bool",15]],[[["connectionerror",4]],["bool",15]],[[["connecterror",4]],["bool",15]],[[["errorkind",4]],["error",3]],[[],[["i32",15],["option",4]]],[[],["bool",15]],[[],[["error",8],["option",4]]],[[],[["error",8],["option",4]]],[[],[["error",8],["option",4]]],[[],[["error",8],["option",4]]],[[],[["error",8],["option",4]]],[[],[["error",8],["option",4]]],[[],[["error",8],["option",4]]],[[]],[[]],[[]],[[]],[[]],[[],["err",4]],[[],["err",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null],"p":[[3,"Incoming"],[3,"Connecting"],[3,"Builder"],[3,"Certificate"],[8,"Dangerous"],[3,"PrivateKey"],[3,"Receiver"],[3,"Sender"],[3,"Connection"],[3,"Endpoint"],[4,"TLSError"],[4,"Error"],[4,"ConnectionError"],[4,"WebPkiError"],[4,"ConnectError"],[4,"ReadError"],[4,"WriteError"],[4,"ErrorKind"],[4,"X509Error"],[4,"Err"],[4,"EndpointError"],[4,"ParseCertificate"],[3,"ResolveError"],[3,"IoError"],[3,"AddrParseError"],[3,"KeyRejected"],[3,"ParseError"],[13,"ParseCertificate"],[13,"DanglingCertificate"],[13,"InappropriateMessage"],[13,"InappropriateHandshakeMessage"]]}\
}');
initSearch(searchIndex);