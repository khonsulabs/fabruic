var searchIndex = JSON.parse('{\
"fabruic":{"doc":"TODO","tn":["Builder","Certificate","CertificateChain","Connecting","Connection","Embedded","Empty","Endpoint","Incoming","KeyPair","Os","PrivateKey","Receiver","Sender","Store","accept","accept","address","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","certificate_chain","client_key_pair","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","close","close","close","close_incoming","close_incoming","cmp","cmp","cmp","cmp","cmp","connect","connect_pinned","connect_unverified","dangerous","default","deserialize","deserialize","deserialize","deserialize","deserialize","disable_trust_dns","dnssec","domains","drop","end_entity_certificate","end_entity_certificate","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","error","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_certificates","from_der","from_der","from_parts","get","hash","hash","hash","hash","hash","hosts_file","index","into","into","into","into","into","into","into","into","into","into","into","into","into","into_end_entity_certificate","into_iter","into_parts","is_terminated","is_terminated","iter","local_address","ne","ne","ne","ne","new","new_client","new_self_signed","new_server","open_stream","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","parts","peer_identity","poll_next","poll_next","poll_next","private_key","protocol","protocol","protocols","remote_address","remote_address","root_certificates","send","serialize","serialize","serialize","serialize","serialize","server_key_pair","set_address","set_client_key_pair","set_dnssec","set_hosts_file","set_protocols","set_root_certificates","set_server_key_pair","set_store","set_trust_dns","store","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","trust_dns","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_poll_next","try_poll_next","type","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_from_certificates","unchecked_from_der","unchecked_from_der","unchecked_from_parts","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_idle","zeroize","Builder","Endpoint","KeyPair","PrivateKey","as_ref","connect_unverified","into","root_certificates","serialize","serialize","set_root_certificates","0","0","0","AlreadyClosed","ApplicationClosed","Aquire","BadDer","BadDerTime","Bind","Builder","CaUsedAsEndEntity","CertExpired","CertNotValidForName","CertNotValidYet","Certificate","CertificateChain","CertificateError","Closed","Closed","Config","Config","Connect","ConnectConfig","ConnectError","Connecting","Connection","ConnectionClosed","ConnectionError","ConnectionLost","ConnectionLost","Custom","Dangling","Der","Deserialize","DeserializeAnyNotSupported","Domain","Domain","DuplicateAttributes","DuplicateExtensions","EmptyHost","EndEntityUsedAsCa","EndpointStopping","Err","Error","Error","ErrorKind","Expired","ExtensionValueInvalid","Failure","Generic","IdnaError","IllegalOrderedRead","Incoming","Incomplete","InvalidAlgorithmIdentifier","InvalidAttributes","InvalidBoolEncoding","InvalidCertValidity","InvalidCertificate","InvalidCharEncoding","InvalidDate","InvalidDnsName","InvalidDomainCharacter","InvalidExtensions","InvalidIpv4Address","InvalidIpv6Address","InvalidIssuerUID","InvalidPort","InvalidRemoteAddress","InvalidSPKI","InvalidSerial","InvalidSignatureForPublicKey","InvalidSignatureValue","InvalidSubjectUID","InvalidTagEncoding","InvalidTbsCertificate","InvalidUserCertificate","InvalidUtf8Encoding","InvalidVersion","InvalidX509Name","Io","KeyPair","LocallyClosed","MissingOrMalformedExtensions","MultipleDomains","NameConstraintViolation","NativeCert","NoDefaultClientConfig","NoIp","NomError","Open","OsStore","Overflow","Parse","ParseDomain","ParseError","ParseUrl","PathLenConstraintViolated","Port","PrivateKey","Read","ReadError","Receiver","Receiver","RelativeUrlWithCannotBeABaseBase","RelativeUrlWithoutBase","RequiredEkuNotFound","Reset","Reset","ResolveError","Sender","Sender","SequenceMustHaveLength","Serialize","SetHostOnCannotBeABaseUrl","SignatureAlgorithmMismatch","SignatureUnsupportedAlgorithm","SignatureVerificationError","SizeLimit","StdDns","Stopped","Stream","TimedOut","TooManyConnections","TransportError","TrustDns","UnknownIssuer","UnknownStream","UnknownStream","UnsupportedCertVersion","UnsupportedCriticalExtension","UnsupportedSignatureAlgorithm","UnsupportedSignatureAlgorithmForPublicKey","UnsupportedVersion","VersionMismatch","WebPki","Write","WriteError","X509","X509Error","ZeroRttRejected","ZeroRttRejected","append","attempted","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","cause","certificate","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","convert","description","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","error","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_error_kind","from_response","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_incomplete","kind","map","map_input","map_input","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","partial_cmp","partial_cmp","partial_cmp","partial_cmp","should_retry","source","source","source","source","source","source","source","source","source","source","source","source","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","zeroize","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"],"q":["fabruicfabruic::dangerous","","","","","","","","","","","fabruic::errorfabruic::error::CertificateError","","","fabruic::error::Config","","fabruic::error::Connect","","","","","","fabruic::error::ConnectError","","fabruic::error::ConnectionError","","","fabruic::error::Err","","","fabruic::error::ErrorKind","","","","","fabruic::error::Incoming","fabruic::error::OsStore","","fabruic::error::ReadError","","fabruic::error::Receiver","","fabruic::error::Sender","","","fabruic::error::Stream","","fabruic::error::WriteError","","fabruic::error::X509Error",""],"d":["Helper for constructing an <code>Endpoint</code>.","A public certificate. You can distribute it freely to …","A public <code>Certificate</code> chain, used to prese","Represent’s an intermediate state to build a <code>Connection</code>.","Represents an open connection. Receives <code>Incoming</code> through …","Use an embedded root certificate store, see <code>webpki-roots</code>.","Empty root certificate store.","Represents a socket using the QUIC protocol to communicate …","An intermediate state to define which type to accept in …","A key-pair, consisting of a <code>CertificateChain</code> and <code>PrivateKey</code>…","Uses the OS root certificate store, see <code>rustls-native-certs</code>…","A private key.","Used to receive data from a stream. Will stop receiving …","Used to send data to a stream.","Configuration option for <code>Builder::set_store</code>.","Accept the incoming stream with the given types.","Accept the <code>Connection</code> with the given <code>T</code> as the type …","Returns the <code>SocketAddr</code> to bind to.","","","","","","","","","","","","","","","","","","","","","","","","","","","Consumes <code>Builder</code> to build <code>Endpoint</code>. Must be called from …","Builds a new <code>Builder</code>. See <code>Builder</code> methods for defaults.","Return the <code>CertificateChain</code> of this <code>KeyPair</code>.","Returns the client certificate <code>KeyPair</code>.","","","","","","","","","","","","","","","","","","","Close the <code>Receiver</code> immediately. To close a <code>Receiver</code> …","Close the <code>Sender</code> immediately.","Close the <code>Connection</code> immediately.","Close all of this <code>Endpoint</code>’s <code>Connection</code>s immediately and …","Prevents any new incoming streams. Already incoming …","Prevents any new incoming connections. Already incoming …","","","","","","Establishes a new <code>Connection</code> to a server. The servers …","Establishes a new <code>Connection</code> to a server.","","Security-sensitive settings are hidden behind these …","","","","","","","Disables the use of <code>trust-dns</code> for <code>Endpoint::connect</code> …","Returns if DNSSEC is enabled for <code>trust-dns</code>.","Panics","","Returns a reference to the end-entity <code>Certificate</code>.","Returns the end-entity <code>Certificate</code>.","","","","","","","","","","","<code>Error</code> for this <code>crate</code>.","Wait for the <code>Receiver</code> part of the stream to finish …","Shut down the <code>Send</code> part of the stream gracefully.","","","","","","","","","","","","","","","","","","","","","","","","","Builds a new <code>CertificateChain</code> from the given <code>Certificate</code>s …","Build <code>Certificate</code> from DER-format. This is not meant as a …","Build <code>PrivateKey</code> from DER-format. This is not meant as a …","Builds a new <code>KeyPair</code> from the given <code>CertificateChain</code> and …","Provides a reference to the <code>Certificate</code> at the given index.","","","","","","Returns if <code>/etc/hosts</code> file support is enabled for <code>trust-dns</code>…","","","","","","","","","","","","","","","Returns the end-entity <code>Certificate</code>.","","Destructure <code>KeyPair</code> into it’s owned parts.","","","Returns an iterator over the <code>CertificateChain</code>.","Get the local <code>SocketAddr</code> the underlying socket is bound to.","","","","","Builds a new <code>Builder</code>. See <code>Builder</code> methods for defaults.","Simplified version of creating a client. See <code>Builder</code> for …","Generate a self signed certificate.","Simplified version of creating a server. See <code>Builder</code> for …","Open a stream on this <code>Connection</code>, allowing to send data …","","","","","","Destructure <code>KeyPair</code> into it’s borrowed parts.","Get the peer’s <code>CertificateChain</code>, if available.","","","","Return the secret <code>PrivateKey</code> of this <code>KeyPair</code>.","The negotiated application protocol. See …","The negotiated application protocol. See …","Returns the set protocols.","The peer’s address. Clients may change addresses at …","The peer’s address. Clients may change addresses at …","","Send <code>data</code> into the stream.","","","","","","Returns the server certificate <code>KeyPair</code>.","Set’s the <code>SocketAddr</code> to bind to.","Set a client certificate <code>KeyPair</code>, use <code>None</code> to remove any …","Controls DNSSEC validation for <code>trust-dns</code> in …","Controls <code>/etc/hosts</code> file support for <code>trust-dns</code> in …","Set the protocols to accept, in order of descending …","","Set a server certificate <code>KeyPair</code>, use <code>None</code> to remove any …","Set’s the default root certificate store.","Controls the use of <code>trust-dns</code> for <code>Endpoint::connect</code>.","Returns the set <code>Store</code>.","","","","","","","","","","Returns if <code>trust-dns</code> is enabled.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the type information for that stream.","","","","","","","","","","","","","Builds <code>CertificateChain</code> from the given <code>Certificate</code>s. This …","Build <code>Certificate</code> from DER-format. This skips the …","Build <code>PrivateKey</code> from DER-format. This skips the …","Build <code>KeyPair</code> from the given <code>CertificateChain</code> and …","","","","","","","","","","","","","Wait for all <code>Connection</code>s to the <code>Endpoint</code> to be cleanly …","","Security-sensitive configuration for <code>Builder</code>.","Security-sensitive features for <code>Endpoint</code>.","Gives serialization access to <code>KeyPair</code>.","Gives read access to the <code>PrivateKey</code>.","Returns a <code>&amp;[u8]</code> to the <code>PrivateKey</code>.","Establishes a new <code>Connection</code> to a server without verifying …","Returns a <code>Vec&lt;u8&gt;</code> to the <code>PrivateKey</code>.","Returns <code>Certificate</code>s set to be added into the root …","Serialize with <code>serde</code>.","Serialize with <code>serde</code>.","Set <code>Certificate</code>s to be added into the root certificate …","","","","Attempting to close something that is already closed.","The peer closed the connection","Failed to aquire root certs from OS.","The encoding of some ASN.1 DER-encoded item is invalid.","The encoding of an ASN.1 DER-encoded time is invalid.","The error binding <code>Endpoint</code>.","Error during construction of <code>Endpoint</code> with <code>Builder::build</code>.","A CA certificate is being used as an end-entity …","The certificate is expired; i.e. the time it is being …","The certificate is not valid for the name it is being …","The certificate is not valid yet; i.e. the time it is …","Error constructing <code>Certificate</code> with <code>Certificate::from_der</code>.","Failed to verify the certificate chain with …","Error constructing <code>Certificate</code> with <code>Certificate::from_der</code>.","<code>Incoming</code> was closed before type information could be …","<code>Sender</code> is closed.","Configuration error.","Configuration faulty.","Error connecting to a server with <code>Endpoint::connect</code>.","Configuration needed to connect to a server is faulty.","Errors in the parameters being used to create a new …","Error completing connection with peer with <code>Incoming::type</code> …","Error receiving stream from peer with <code>Stream</code> on from …","The peer’s QUIC stack aborted the connection …","Reasons why a connection might be lost","The connection was lost","The connection was lost","A custom error message from Serde.","Bytes passed contain uncorrelated bytes.","","Failed to <code>Deserialize</code> a message from a <code>Receiver</code>.","Serde has a deserialize_any method that lets the format …","<code>Certificate</code> is missing a domain name.","URL didn’t contain a domain.","","","","An end-entity certificate is being used as a CA …","The endpoint can no longer create new connections","The <code>Err</code> enum indicates the parser was not successful","An error that occurs during certificate validation or name …","The parser had an error (recoverable)","The kind of error that can be produced during a …","<code>Certificate</code> has expired.","An X.509 extension is invalid.","The parser had an unrecoverable error: we got to the right …","","","Attempted an ordered read following an unordered read","Error receiving type information from <code>Incoming</code> stream.","There was not enough data","","","Returned if the deserializer attempts to deserialize a …","The certificate validity period (notBefore, notAfter) is …","Top-level certificate structure is invalid","Returned if the deserializer attempts to deserialize a …","","The domain name supplied was malformed","","","","","","","The remote <code>SocketAddr</code> supplied was malformed","","","The signature is invalid for the given public key.","","","Returned if the deserializer attempts to deserialize the …","","","Returned if the deserializer attempts to deserialize a …","","","If the error stems from the reader/writer that is being …","Failed to pair given <code>CertificateChain</code> and <code>PrivateKey</code> with …","The local application closed the connection","The certificate extensions are missing or malformed.","The passed <code>Certificate</code> has multiple domains, this is not …","The certificate violates one or more name constraints.","Error aquiring or parsing root certificates from the OS.","No default client configuration was set up","Found no IP address for that domain.","","Opening a new stream with <code>Connection::open_stream</code> failed.","Error aquiring or parsing root certs from OS.","","Failed to parse root certs from OS.","Failed to parse domain.","Errors that can occur during parsing.","Failed to parse URL.","The certificate violates one or more path length …","URL didn’t contain a port.","Failed to parse the given private key with …","Failed to read from a <code>Receiver</code>.","Errors that arise from reading from a stream.","Error receiving a message from a <code>Receiver</code>.","Failed receiving type information from <code>Incoming</code> stream.","","","The certificate is not valid for the Extended Key Usage …","The peer abandoned transmitting data on this stream","The peer is unable to continue processing this connection, …","The error type for errors that get returned in the crate","Error sending a message to a <code>Sender</code>.","Sending the type information to peer failed.","Bincode can not encode sequences of unknown length (like …","Failed to <code>Serialize</code> a message for a <code>Sender</code>.","","The algorithm in the TBSCertificate “signature” field …","","","If (de)serializing a message takes more than the provided …","Failed to resolve domain with <code>ToSocketAddrs</code>.","The peer is no longer accepting data on this stream","Error opening a new stream to peer with …","Communication with the peer has lapsed for longer than the …","The number of active connections on the local endpoint is …","The peer violated the QUIC specification as understood by …","Failed to resolve domain with <code>trust-dns</code>.","A valid issuer for the certificate could not be found.","The stream has already been stopped, finished, or reset","The stream has already been finished or reset","The certificate is not a v3 X.509 certificate.","The certificate contains an unsupported critical extension.","The signature algorithm for a signature is not in the set …","The signature’s algorithm does not match the algorithm …","The cryptographic layer does not support the specified …","The peer doesn’t implement any supported version","<code>Error</code> returned by <code>webpki</code>.","Failed to write to a <code>Sender</code>.","Errors that arise from writing to a stream","<code>Error</code> returned by <code>x509_parser</code>.","An error that can occur while parsing or validating a …","This was a 0-RTT stream and the server rejected it","This was a 0-RTT stream and the server rejected it","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Recovered <code>Builder</code> for re-use.","","The bytes used to build the <code>Certificate</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Automatically converts between errors if the underlying …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The error.","Configuration error.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A conversion to determine if the response is an error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tests if the result is Incomplete","Get the kind of the error","Applies the given function to the inner error","Maps <code>Err&lt;(T, ErrorKind)&gt;</code> to <code>Err&lt;(U, ErrorKind)&gt;</code> with the …","Maps <code>Err&lt;error::Error&lt;T&gt;&gt;</code> to <code>Err&lt;error::Error&lt;U&gt;&gt;</code> with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Obtaining ownership","Obtaining ownership","Obtaining ownership","Obtaining ownershipi":[0,0,0,0,0,1,1,0,0,0,1,0,0,0,0,2,3,4,5,6,2,5,7,6,8,3,9,10,11,4,1,12,2,5,7,6,8,3,9,10,11,4,1,12,4,12,8,4,5,7,6,8,9,10,11,1,12,5,7,6,8,9,10,11,1,12,9,10,11,12,11,12,5,7,6,8,1,12,12,12,0,4,5,7,6,8,1,4,4,5,6,7,8,5,7,6,8,1,5,7,6,8,1,0,9,10,2,5,7,6,8,3,9,10,11,4,1,12,2,5,7,6,8,3,9,10,11,4,1,12,7,5,6,8,7,5,7,6,8,1,4,7,2,5,7,6,6,8,3,9,10,11,4,1,12,7,7,8,11,12,7,12,5,7,6,8,4,12,8,12,11,5,7,6,8,1,8,11,9,11,12,8,3,11,4,3,11,4,10,5,7,6,8,1,4,4,4,4,4,4,4,4,4,4,4,5,7,6,8,9,10,11,1,12,4,2,5,5,7,7,6,6,8,8,3,9,10,11,4,1,12,2,5,7,6,8,3,9,10,11,4,1,12,9,11,2,2,5,7,6,8,3,9,10,11,4,1,12,7,5,6,8,2,5,7,6,8,3,9,10,11,4,1,12,12,6,0,0,0,0,13,14,13,15,13,16,15,17,18,19,0,20,21,22,22,23,0,22,22,22,22,0,0,0,24,25,0,26,0,26,0,0,0,20,0,27,28,29,30,31,32,29,30,26,31,31,33,22,34,0,0,35,0,30,22,35,31,33,27,0,35,31,31,29,22,31,29,31,34,33,31,33,33,31,33,34,31,31,22,31,31,29,31,31,29,31,31,29,0,20,22,26,22,23,34,26,31,36,0,33,21,26,0,26,22,26,0,32,0,0,24,33,33,22,27,20,0,0,36,29,25,33,22,31,31,29,26,28,0,20,34,20,26,22,27,28,22,22,22,22,34,20,30,25,0,30,0,27,28,31,37,38,30,17,39,40,41,42,23,21,26,18,19,36,24,32,25,22,31,35,29,27,28,20,34,37,33,38,30,17,39,40,41,42,23,21,26,18,19,36,24,32,25,22,31,35,29,27,28,20,34,37,33,42,29,38,17,39,40,41,18,19,22,31,35,27,28,20,34,37,33,17,39,40,41,18,19,22,31,35,27,28,20,34,37,33,17,39,40,41,35,29,17,17,39,40,41,18,19,22,31,35,27,28,20,34,33,17,39,40,41,18,19,35,27,28,20,34,33,38,42,38,38,30,30,17,17,39,39,40,40,41,41,42,42,23,23,21,21,26,26,18,18,19,19,36,36,24,24,32,32,25,25,22,22,31,31,35,35,29,29,27,27,28,28,20,20,34,34,37,37,33,33,38,30,17,39,40,41,42,23,23,21,26,26,26,26,18,19,36,36,36,24,32,32,32,25,25,25,25,22,31,31,31,35,35,35,29,27,27,27,28,28,20,20,20,34,34,37,37,37,37,37,37,37,33,33,31,37,17,39,40,41,38,30,17,39,40,41,42,23,21,26,18,19,36,24,32,25,22,31,35,29,27,28,20,34,37,33,35,37,35,35,35,17,39,40,18,19,31,35,27,28,20,34,17,39,40,41,37,38,30,42,23,26,36,32,25,31,35,27,28,20,17,39,40,41,18,19,22,31,35,35,35,35,35,27,28,20,34,37,33,38,30,17,39,40,41,42,23,21,26,18,19,36,24,32,25,22,31,35,29,27,28,20,34,37,33,38,30,17,39,40,41,42,23,21,26,18,19,36,24,32,25,22,31,35,29,27,28,20,34,37,33,38,30,17,39,40,41,42,23,21,26,18,19,36,24,32,25,22,31,35,29,27,28,20,34,37,33,38,30,17,39,40,41,42,23,21,26,18,19,36,24,32,25,22,31,35,29,27,28,20,34,37,33,38,30,17,39,40,41,42,23,21,26,18,19,36,24,32,25,22,31,35,29,27,28,20,34,37,33,17,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["socketaddr",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4,[["endpoint",3],["builder",3]]]],[[],["builder",3]],[[],["certificatechain",3]],[[],["option",4]],[[],["certificate",3]],[[],["certificatechain",3]],[[],["privatekey",3]],[[],["keypair",3]],[[],["receiver",3]],[[],["sender",3]],[[],["connection",3]],[[],["store",4]],[[],["endpoint",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["certificate",3]],["ordering",4]],[[["certificatechain",3]],["ordering",4]],[[["privatekey",3]],["ordering",4]],[[["keypair",3]],["ordering",4]],[[["store",4]],["ordering",4]],[[["asref",8,[["str",15]]]]],[[["asref",8,[["str",15]]],["certificate",3],["option",4,[["keypair",3]]]]],[[["",26,[["asref",8,[["str",15]]],["send",8]]],["option",4,[["keypair",3]]]],["pin",3,[["box",3,[["future",8]]]]]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[],["bool",15]],[[],["vec",3,[["string",3]]]],[[]],[[],["certificate",3]],[[],["certificate",3]],[[["certificate",3]],["bool",15]],[[["certificatechain",3]],["bool",15]],[[["privatekey",3]],["bool",15]],[[["keypair",3]],["bool",15]],[[["store",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["into",8,[["vec",3,[["certificate",3]]]]]],["result",4,[["certificatechain",3]]]],[[["into",8,[["vec",3,[["u8",15]]]]]],["result",4,[["certificate",3]]]],[[["into",8,[["vec",3,[["u8",15]]]]]],["result",4,[["privatekey",3]]]],[[["certificatechain",3],["privatekey",3]],["result",4,[["keypair",3]]]],[[["usize",15]],["option",4,[["certificate",3]]]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["vec",3,[["u8",15]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["certificate",3]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["iter",3,[["certificate",3]]]],[[],["result",4,[["socketaddr",4],["error",3]]]],[[["certificate",3]],["bool",15]],[[["certificatechain",3]],["bool",15]],[[["privatekey",3]],["bool",15]],[[["keypair",3]],["bool",15]],[[]],[[],["result",4,[["config",4]]]],[[["into",8,[["string",3]]]]],[[["u16",15],["keypair",3]],["result",4,[["config",4]]]],[[]],[[["certificate",3]],["option",4,[["ordering",4]]]],[[["certificatechain",3]],["option",4,[["ordering",4]]]],[[["privatekey",3]],["option",4,[["ordering",4]]]],[[["keypair",3]],["option",4,[["ordering",4]]]],[[["store",4]],["option",4,[["ordering",4]]]],[[]],[[],["option",4,[["certificatechain",3]]]],[[["pin",3],["context",3]],["poll",4,[["option",4]]]],[[["pin",3],["context",3]],["poll",4,[["option",4]]]],[[["pin",3],["context",3]],["poll",4,[["option",4]]]],[[],["privatekey",3]],[[]],[[],["option",4,[["vec",3,[["u8",15]]]]]],[[]],[[],["socketaddr",4]],[[],["socketaddr",4]],[[]],[[],["result",4,[["sender",4]]]],[[],["result",4]],[[],["result",4]],[[["serializer",8]],["result",4]],[[["serializer",8]],["result",4]],[[],["result",4]],[[],["option",4]],[[["socketaddr",4]]],[[["option",4,[["keypair",3]]]]],[[["bool",15]]],[[["bool",15]]],[[["into",8,[["vec",3,[["vec",3,[["u8",15]]]]]]]]],[[["into",8,[["vec",3,[["certificate",3]]]]]]],[[["option",4,[["keypair",3]]]]],[[["store",4]]],[[["bool",15]]],[[],["store",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["result",4]],[[],["result",4]],[[["vec",3,[["u8",15]]]],["result",4]],[[],["result",4]],[[["vec",3,[["certificate",3]]]],["result",4]],[[],["result",4]],[[["vec",3,[["u8",15]]]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],["poll",4,[["option",4,[["result",4]]]]]],[[["pin",3],["context",3]],["poll",4,[["option",4,[["result",4]]]]]],[[]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["into",8,[["vec",3,[["certificate",3]]]]]]],[[["into",8,[["vec",3,[["u8",15]]]]]]],[[["into",8,[["vec",3,[["u8",15]]]]]]],[[["certificatechain",3],["privatekey",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[["",26,[["asref",8,[["str",15]]],["send",8]]],["option",4,[["keypair",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[],["vec",3,[["u8",15]]]],[[]],[[["serializer",8]],["result",4]],[[["serializer",8]],["result",4]],[[["into",8,[["vec",3,[["certificate",3]]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["errorkind",4],["x509error",4]],["x509error",4]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["option",4,[["error",8]]]],null,[[],["privatekey",3]],[[],["keypair",3]],[[],["certificatechain",3]],[[],["alreadyclosed",3]],[[],["connection",3]],[[],["connecting",3]],[[],["error",4]],[[],["x509error",4]],[[],["err",4]],[[],["readerror",4]],[[],["writeerror",4]],[[],["connectionerror",4]],[[],["connecterror",4]],[[],["resolveerror",3]],[[],["parseerror",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["privatekey",3]],["ordering",4]],[[["keypair",3]],["ordering",4]],[[["certificatechain",3]],["ordering",4]],[[["alreadyclosed",3]],["ordering",4]],[[["err",4]],["err",4]],[[],["str",15]],[[]],[[["privatekey",3]],["bool",15]],[[["keypair",3]],["bool",15]],[[["certificatechain",3]],["bool",15]],[[["alreadyclosed",3]],["bool",15]],[[["connection",3]],["bool",15]],[[["connecting",3]],["bool",15]],[[["error",4]],["bool",15]],[[["x509error",4]],["bool",15]],[[["err",4]],["bool",15]],[[["readerror",4]],["bool",15]],[[["writeerror",4]],["bool",15]],[[["connectionerror",4]],["bool",15]],[[["connecterror",4]],["bool",15]],[[["parseerror",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["osstore",4]]],[[]],[[]],[[["config",4]]],[[["connecterror",4]]],[[["box",3,[["resolveerror",3]]]]],[[]],[[]],[[]],[[["connectionerror",4]]],[[["sender",4]]],[[]],[[]],[[["errorkind",4]]],[[["readerror",4]]],[[["writeerror",4]]],[[["alreadyclosed",3]]],[[["box",3,[["errorkind",4]]]]],[[]],[[]],[[["errorkind",4]],["x509error",4]],[[["bererror",4]],["x509error",4]],[[]],[[["bererror",4]],["err",4,[["bererror",4]]]],[[]],[[["x509error",4]],["err",4,[["x509error",4]]]],[[]],[[["readableerror",4]],["readerror",4]],[[]],[[["connectionerror",4]],["readerror",4]],[[]],[[["connectionerror",4]],["writeerror",4]],[[]],[[["error",3]],["connectionerror",4]],[[["close",4]],["connectionerror",4]],[[["unsupportedversion",3]],["connecterror",4]],[[]],[[["str",15]],["resolveerror",3]],[[["resolveerrorkind",4]],["resolveerror",3]],[[]],[[["error",3]],["resolveerror",3]],[[["string",3]],["resolveerror",3]],[[["protoerror",3]],["resolveerror",3]],[[["poisonerror",3]],["resolveerror",3]],[[]],[[["errors",3]],["parseerror",4]],[[["errorkind",4]],["x509error",4]],[[["dnsresponse",3],["bool",15]],["result",4,[["dnsresponse",3],["resolveerror",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["resolveerrorkind",4]],[[],["err",4]],[[],["err",4]],[[],["err",4,[["error",3]]]],[[["privatekey",3]],["bool",15]],[[["keypair",3]],["bool",15]],[[["certificatechain",3]],["bool",15]],[[["connection",3]],["bool",15]],[[["connecting",3]],["bool",15]],[[["x509error",4]],["bool",15]],[[["err",4]],["bool",15]],[[["readerror",4]],["bool",15]],[[["writeerror",4]],["bool",15]],[[["connectionerror",4]],["bool",15]],[[["connecterror",4]],["bool",15]],[[["privatekey",3]],["option",4,[["ordering",4]]]],[[["keypair",3]],["option",4,[["ordering",4]]]],[[["certificatechain",3]],["option",4,[["ordering",4]]]],[[["alreadyclosed",3]],["option",4,[["ordering",4]]]],[[],["bool",15]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["err",4]],[[],["err",4,[["error",3,[["vec",3,[["u8",15],["global",3]]]]]]]],[[],["err",4,[["error",3,[["string",3]]]]]],[[],["err",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"Store"],[3,"Incoming"],[3,"Connecting"],[3,"Builder"],[3,"Certificate"],[3,"PrivateKey"],[3,"CertificateChain"],[3,"KeyPair"],[3,"Receiver"],[3,"Sender"],[3,"Connection"],[3,"Endpoint"],[8,"PrivateKey"],[8,"Endpoint"],[8,"Builder"],[8,"KeyPair"],[3,"PrivateKey"],[3,"Connection"],[3,"Connecting"],[4,"ConnectionError"],[4,"OsStore"],[4,"Error"],[4,"Config"],[4,"Incoming"],[4,"Sender"],[4,"Connect"],[4,"ReadError"],[4,"WriteError"],[4,"ErrorKind"],[4,"CertificateError"],[4,"X509Error"],[4,"Receiver"],[4,"ParseError"],[4,"ConnectError"],[4,"Err"],[4,"Stream"],[3,"ResolveError"],[3,"Certificate"],[3,"KeyPair"],[3,"CertificateChain"],[3,"AlreadyClosed"],[3,"Builder"],[13,"WebPki"],[13,"X509"],[13,"Dangling"],[13,"Bind"],[13,"NativeCert"],[13,"ParseUrl"],[13,"ParseDomain"],[13,"TrustDns"],[13,"StdDns"],[13,"ConnectConfig"],[13,"Config"],[13,"InvalidDnsName"],[13,"InvalidRemoteAddress"],[13,"TransportError"],[13,"ConnectionClosed"],[13,"ApplicationClosed"],[13,"Incomplete"],[13,"Error"],[13,"Failure"],[13,"Io"],[13,"InvalidUtf8Encoding"],[13,"InvalidBoolEncoding"],[13,"InvalidTagEncoding"],[13,"Custom"],[13,"Receiver"],[13,"Aquire"],[13,"Parse"],[13,"Reset"],[13,"ConnectionLost"],[13,"Read"],[13,"Deserialize"],[13,"Serialize"],[13,"Write"],[13,"Closed"],[13,"Open"],[13,"Sender"],[13,"Stopped"],[13,"ConnectionLost"],[13,"Der"],[13,"NomError"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};