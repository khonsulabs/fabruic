var searchIndex = JSON.parse('{\
"fabruic":{"doc":"TODO","tn":["Builder","Certificate","Connecting","Connection","Embedded","Empty","Endpoint","Incoming","KeyPair","Os","PrivateKey","Receiver","Sender","Store","accept","accept","add_ca","address","as_bits","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","certificate","client_key_pair","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","close","close","close","close_incoming","close_incoming","cmp","cmp","cmp","cmp","connect","connect_pinned","dangerous","default","deserialize","deserialize","deserialize","deserialize","disable_trust_dns","dnssec","domains","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","error","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_der","from_der","from_parts","hash","hash","hash","hash","hosts_file","into","into","into","into","into","into","into","into","into","into","into","into","into_parts","is_terminated","is_terminated","local_address","ne","ne","ne","new","new_client","new_self_signed","new_server","open_stream","partial_cmp","partial_cmp","partial_cmp","partial_cmp","parts","peer_identity","poll_next","poll_next","poll_next","private_key","protocol","protocol","protocols","remote_address","send","serialize","serialize","serialize","serialize","server_key_pair","set_address","set_client_key_pair","set_dnssec","set_hosts_file","set_protocols","set_server_key_pair","set_store","set_trust_dns","store","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","trust_dns","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_poll_next","try_poll_next","type","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_from_der","unchecked_from_der","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_idle","zeroize","Builder","KeyPair","PrivateKey","add_ca","as_ref","into","serialize","serialize","0","0","AddrParseError","AlreadyClosed","ApplicationClosed","BadDER","BadDERTime","Builder","CAUsedAsEndEntity","CertExpired","CertNotValidForName","CertNotValidYet","Closed","Closed","Config","Config","Connect","ConnectError","Connecting","Connection","ConnectionClosed","ConnectionClosed","ConnectionClosed","ConnectionError","Custom","DanglingCertificate","Der","Deserialize","DeserializeAnyNotSupported","Domain","DomainCertificate","DuplicateAttributes","DuplicateExtensions","EmptyHost","EndEntityUsedAsCA","EndpointStopping","Err","Error","Error","ErrorKind","ExpiredCertificate","ExtensionValueInvalid","Failure","Generic","IdnaError","IllegalOrderedRead","Incoming","Incomplete","InvalidAlgorithmIdentifier","InvalidAttributes","InvalidBoolEncoding","InvalidCertValidity","InvalidCertificate","InvalidCharEncoding","InvalidDate","InvalidDnsName","InvalidDomainCharacter","InvalidExtensions","InvalidIpv4Address","InvalidIpv6Address","InvalidIssuerUID","InvalidPort","InvalidRemoteAddress","InvalidSPKI","InvalidSerial","InvalidSignatureForPublicKey","InvalidSignatureValue","InvalidSubjectUID","InvalidTagEncoding","InvalidTbsCertificate","InvalidUserCertificate","InvalidUtf8Encoding","InvalidVersion","InvalidX509Name","Io","IoError","LocallyClosed","MultipleDomains","NameConstraintViolation","NoIp","NomError","Open","Overflow","ParseCertificate","ParseCertificate","ParseDomain","ParsePrivateKey","ParseUrl","PathLenConstraintViolated","Port","Read","ReadError","Receiver","Receiver","RelativeUrlWithCannotBeABaseBase","RelativeUrlWithoutBase","RequiredEKUNotFound","Reset","Reset","ResolveError","Result","Sender","Sender","SequenceMustHaveLength","Serialize","SetHostOnCannotBeABaseUrl","SignatureAlgorithmMismatch","SignatureUnsupportedAlgorithm","SignatureVerificationError","SizeLimit","StdDns","Stopped","Stream","TimedOut","TooManyConnections","TransportError","TrustDns","UnknownIssuer","UnknownStream","UnknownStream","UnsupportedCertVersion","UnsupportedCriticalExtension","UnsupportedSignatureAlgorithm","UnsupportedSignatureAlgorithmForPublicKey","UrlParseError","VersionMismatch","WebPki","WebPkiError","Write","WriteError","X509","X509Error","ZeroRttRejected","ZeroRttRejected","append","attempted","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","cause","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","convert","description","description","description","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_error_kind","from_raw_os_error","from_response","get_mut","get_ref","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","is_incomplete","kind","kind","last_os_error","map","map_input","ne","ne","ne","ne","ne","ne","ne","new","raw_os_error","should_retry","source","source","source","source","source","source","source","source","source","source","source","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","certificate","certificate","dangling","error"],"q":["fabruicfabruic::dangerous","","","","","","","","fabruic::errorfabruic::error::Error","","",""],"d":["Helper for constructing an [<code>Endpoint</code>].","A public certificate. You can distribute it freely to …","Represent’s an intermediate state to build a [<code>Connection</code>…","Represents an open connection. Receives [<code>Incoming</code>] …","Use an embedded root certificate store, see <code>webpki-roots</code>.","Empty root certificate store.","Represents a socket using the QUIC protocol to …","An intermediate state to define which type to accept in …","A key-pair, consisting of a [<code>Certificate</code>] and [<code>PrivateKey</code>]…","Uses the OS root certificate store, see …","A private key.","Used to receive data from a stream. Will stop receiving …","Used to send data to a stream.","Configuration option for [<code>Builder::set_store</code>].","Accept the incoming stream with the given types.","Accept the [<code>Connection</code>] with the given <code>T</code> as the type …","","Returns the [<code>SocketAddr</code>] to bind to.","","","","","","","","","","","","","","","","","","","","","","","","","","Consumes [<code>Builder</code>] to build [<code>Endpoint</code>]. Must be called …","Builds a new [<code>Builder</code>]. See [<code>Builder</code>] methods for …","Return the public [<code>Certificate</code>] of this [<code>KeyPair</code>].","Returns the client certificate [<code>KeyPair</code>].","","","","","","","","","","","","","","","","","Close the [<code>Receiver</code>] immediately. To close a [<code>Receiver</code>] …","Close the [<code>Sender</code>] immediately.","Close the [<code>Connection</code>] immediately.","Close all of this [<code>Endpoint</code>]’s <code>Connection</code>s immediately …","Prevents any new incoming streams. Already incoming …","Prevents any new incoming connections. Already incoming …","","","","","Establishes a new <code>Connection</code> to a server. The servers […","Establishes a new <code>Connection</code> to a server.","Security-sensitive settings are hidden behind these …","","","","","","Disables the use of <code>trust-dns</code> for [<code>Endpoint::connect</code>] …","Returns if DNSSEC is enabled for <code>trust-dns</code>.","Panics","","","","","","","","","","<code>Error</code> for this [<code>crate</code>].","Wait for the [<code>Receiver</code>] part of the stream to finish …","Shut down the [<code>Send</code>] part of the stream gracefully.","","","","","","","","","","","","","","","","","","","","","","","Build [<code>Certificate</code>] from DER-format. This is not meant as …","Build [<code>PrivateKey</code>] from DER-format. This is not meant as …","Builds a new [<code>KeyPair</code>] from the given [<code>Certificate</code>] and […","","","","","Returns if <code>/etc/hosts</code> file support is enabled for …","","","","","","","","","","","","","Destructure [<code>KeyPair</code>] into it’s owned parts.","","","Get the local [<code>SocketAddr</code>] the underlying socket is bound …","","","","Builds a new [<code>Builder</code>]. See [<code>Builder</code>] methods for …","Simplified version of creating a client. See [<code>Builder</code>] …","Generate a self signed [<code>Certificate</code>].","Simplified version of creating a server. See [<code>Builder</code>] …","Open a stream on this [<code>Connection</code>], allowing to send data …","","","","","Destructure [<code>KeyPair</code>] into it’s borrowed parts.","Get the peer’s identity, if available.","","","","Return the secret [<code>PrivateKey</code>] of this [<code>KeyPair</code>].","The negotiated application protocol. See …","The negotiated application protocol. See …","Returns the set protocols.","The peer’s address. Clients may change addresses at …","Send <code>data</code> into the stream.","","","","","Returns the server certificate [<code>KeyPair</code>].","Set’s the [<code>SocketAddr</code>] to bind to.","Set a client certificate [<code>KeyPair</code>], use [<code>None</code>] to remove …","Controls DNSSEC validation for <code>trust-dns</code> in […","Controls <code>/etc/hosts</code> file support for <code>trust-dns</code> in […","Set the protocols to accept, in order of descending …","Set a server certificate [<code>KeyPair</code>], use [<code>None</code>] to remove …","Set’s the default root certificate store. See [<code>Store</code>] …","Controls the use of <code>trust-dns</code> for [<code>Endpoint::connect</code>].","Returns the set [<code>Store</code>].","","","","","","","","","Returns if <code>trust-dns</code> is enabled.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the type information for that stream.","","","","","","","","","","","","Build [<code>Certificate</code>] from DER-format. This skips the …","Build [<code>PrivateKey</code>] from DER-format. This skips the …","","","","","","","","","","","","Wait for all <code>Connection</code>s to the [<code>Endpoint</code>] to be cleanly …","","Security-sensitive configuration for [<code>Builder</code>].","Gives serialization access to [<code>KeyPair</code>].","Gives read access to the [<code>PrivateKey</code>].","Adds a [<code>Certificate</code>] into the default certificate …","Returns a <code>&[u8]</code> to the [<code>PrivateKey</code>].","Returns a [<code>Vec<u8></code>] to the [<code>PrivateKey</code>].","Serialize with [<code>serde</code>].","Serialize with [<code>serde</code>].","","","An error which can be returned when parsing an IP address …","Attempting to close something that is already closed.","The peer closed the connection","The encoding of some ASN.1 DER-encoded item is invalid.","The encoding of an ASN.1 DER-encoded time is invalid.","Error binding socket during construction of <code>Endpoint</code> with …","A CA certificate is veing used as an end-entity …","The certificate is expired; i.e. the time it is being …","The certificate is not valid for the name it is being …","The certificate is not valid yet; i.e. the time it is …","<code>Incoming</code> was closed before type information could be …","[<code>Sender</code>] is closed.","Configuration needed to connect to a server is faulty.","The transport configuration was invalid","Error connecting to a server with <code>Endpoint::connect</code>.","Errors in the parameters being used to create a new …","Error completing connection with peer with <code>Incoming::type</code> …","Error receiving connection from peer with <code>Stream</code> on from …","The connection was closed.","The connection was closed.","The peer’s QUIC stack aborted the connection …","Reasons why a connection might be lost","A custom error message from Serde.","Data passed to generate <code>Certificate</code> with <code>from_der</code> found …","","Failed to <code>Deserialize</code> a message from a <code>Receiver</code>.","Serde has a deserialize_any method that lets the format …","URL didn’t contain a domain.","<code>Certificate</code> is missing a domain name.","","","","An end-entity certificate is being used as a CA …","The endpoint can no longer create new connections","The <code>Err</code> enum indicates the parser was not successful","<code>Error</code> for this [<code>crate</code>].","The parser had an error (recoverable)","The kind of error that can be produced during a …","<code>Certificate</code> has expired.","An X.509 extension is invalid.","The parser had an unrecoverable error: we got to the right…","","","Attempted an ordered read following an unordered read","Error receiving type information from <code>Incoming</code> stream.","There was not enough data","","","Returned if the deserializer attempts to deserialize a …","The certificate validity period (notBefore, notAfter) is …","Top-level certificate structure is invalid","Returned if the deserializer attempts to deserialize a …","","The domain name supplied was malformed","","","","","","","The remote [<code>SocketAddr</code>] supplied was malformed","","","The signature is invalid for the given public key.","","","Returned if the deserializer attempts to deserialize the …","","","Returned if the deserializer attempts to deserialize a …","","","If the error stems from the reader/writer that is being …","The error type for I/O operations of the <code>Read</code>, <code>Write</code>, <code>Seek</code>…","The local application closed the connection","The passed <code>Certificate</code> has multiple domains, this is not …","The certificate violates one or more name constraints.","Found no IP address for that domain.","","Opening a new stream with <code>Connection::open_stream</code> failed.","","Possible certificate parsing errors.","Failed to parse the given certificate.","Failed to parse domain.","Failed to parse the given private key.","Failed to parse URL.","The certificate violates one or more path length …","URL didn’t contain a port.","Failed to read from a <code>Receiver</code>.","Errors that arise from reading from a stream.","Error receiving a message from a <code>Receiver</code>.","Failed receiving type information from <code>Incoming</code> stream.","","","The certificate is not valid for the Extended Key Usage …","The peer abandoned transmitting data on this stream.","The peer is unable to continue processing this …","The error type for errors that get returned in the crate","<code>Result</code> type for this [<code>crate</code>].","Error sending a message to a <code>Sender</code>.","Sending the type information to peer failed.","Bincode can not encode sequences of unknown length (like …","Failed to <code>Serialize</code> a message for a <code>Sender</code>.","","The algorithm in the TBSCertificate “signature” field …","","","If (de)serializing a message takes more than the provided …","Failed to resolve domain with <code>ToSocketAddrs</code>.","The peer is no longer accepting data on this stream.","Error opening a new stream to peer with …","Communication with the peer has lapsed for longer than …","The number of active connections on the local endpoint is …","The peer violated the QUIC specification as understood by …","Failed to resolve domain with <code>trust-dns</code>.","A valid issuer for the certificate could not be found.","The stream has already been stopped, finished, or reset","The stream has already been finished or reset","The certificate is not a v3 X.509 certificate.","The certificate contains an unsupported critical …","The signature algorithm for a signature is not in the set …","The signature’s algorithm does not match the algorithm …","Errors that can occur during parsing.","The peer doesn’t implement any supported version","<code>Error</code> returned by [<code>webpki</code>].","An error that occurs during certificate validation or …","Failed to write to a <code>Sender</code>.","Errors that arise from writing to a stream","<code>Error</code> returned by [<code>x509_parser</code>].","An error that can occur while parsing or validating a …","This was a 0-RTT stream and the server rejected it.","This was a 0-RTT stream and the server rejected it.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Recovered <code>Builder</code> for re-use.","","","","","","","","","","","","","","","","","","","","","","","Automatically converts between errors if the underlying …","","","","","","","","","","","","","","","","","","","","The error binding <code>Endpoint</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a [<code>NulError</code>] into a [<code>io::Error</code>].","Converts an [<code>ErrorKind</code>] into an [<code>Error</code>].","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new instance of an [<code>Error</code>] from a particular OS …","A conversion to determine if the response is an error","Returns a mutable reference to the inner error wrapped by …","Returns a reference to the inner error wrapped by this …","","","","","","","","","","","","","","","","","","","","","","","","Consumes the <code>Error</code>, returning its inner error (if any).","Tests if the result is Incomplete","Returns the corresponding [<code>ErrorKind</code>] for this error.","Get the kind of the error","Returns an error representing the last OS error which …","Applies the given function to the inner error","Maps <code>Err<(T, ErrorKind)></code> to <code>Err<(U, ErrorKind)></code> with the …","","","","","","","","Creates a new I/O error from a known kind of error as …","Returns the OS error that this error represents (if any).","","","","","","","","","","","","","","","","","","Automatically converts between errors if the underlying …","Obtaining ownership","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The certificate passed to <code>from_der</code>.","The certificate passed to <code>from_der</code>.","The dangling bytes.","The parsing error."],"i":[0,0,0,0,1,1,0,0,0,1,0,0,0,0,2,3,4,4,5,5,6,2,5,6,7,3,8,9,10,4,1,11,2,5,6,7,3,8,9,10,4,1,11,4,11,7,4,5,6,7,8,9,10,1,11,5,6,7,8,9,10,1,11,8,9,10,11,10,11,5,6,7,1,11,11,0,4,5,6,7,1,4,4,5,6,5,6,7,1,5,6,7,1,0,8,9,2,5,6,7,3,8,9,10,4,1,11,2,5,6,7,3,8,9,10,4,1,11,5,6,7,5,6,7,1,4,2,5,6,6,7,3,8,9,10,4,1,11,7,10,11,11,5,6,7,4,11,7,11,10,5,6,7,1,7,10,8,10,11,7,3,10,4,10,9,5,6,7,1,4,4,4,4,4,4,4,4,4,4,5,6,7,8,9,10,1,11,4,2,5,6,7,3,8,9,10,4,1,11,2,5,6,7,3,8,9,10,4,1,11,8,10,2,2,5,6,7,3,8,9,10,4,1,11,5,6,2,5,6,7,3,8,9,10,4,1,11,11,6,0,0,0,12,13,13,13,14,15,16,0,0,17,18,18,0,18,18,18,18,19,20,21,22,0,0,0,0,23,24,17,0,25,26,27,28,25,21,26,27,27,29,18,22,0,0,30,0,26,18,30,27,29,23,0,30,27,27,25,18,27,25,27,22,29,27,29,29,27,29,22,27,27,18,27,27,25,27,27,25,27,27,25,0,17,21,18,21,27,31,29,0,26,21,26,21,18,21,28,0,0,19,29,29,18,23,17,0,0,0,31,25,20,29,18,27,27,25,21,24,0,17,22,17,21,18,23,24,18,18,18,18,0,17,32,0,20,0,32,0,23,24,27,33,34,35,21,15,16,31,19,28,20,26,32,36,37,18,27,30,25,23,24,17,22,33,29,34,35,21,15,16,31,19,28,20,26,32,36,37,18,27,30,25,23,24,17,22,33,29,35,36,25,34,37,18,30,23,24,17,22,33,29,34,37,18,30,23,24,17,22,33,29,30,36,37,25,37,18,27,30,23,24,17,22,29,37,30,23,24,17,22,29,35,34,34,35,35,21,21,15,15,16,16,31,31,19,19,28,28,20,20,26,26,32,32,36,36,37,37,18,18,27,27,30,30,25,25,23,23,24,24,17,17,22,22,33,33,29,29,34,35,21,21,21,21,15,16,31,31,31,19,28,28,28,20,20,20,20,26,32,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,37,18,27,27,27,30,30,30,25,23,23,24,17,17,17,22,33,33,33,33,33,33,33,29,29,27,36,33,36,36,34,35,21,15,16,31,19,28,20,26,32,36,37,18,27,30,25,23,24,17,22,33,29,36,30,36,33,36,30,30,37,27,30,23,24,17,22,36,36,33,35,21,31,28,20,32,36,27,30,24,17,22,34,37,18,30,30,30,23,24,17,22,33,29,34,35,21,15,16,31,19,28,20,26,32,36,37,18,27,30,25,23,24,17,22,33,29,34,35,21,15,16,31,19,28,20,26,32,36,37,18,27,30,25,23,24,17,22,33,29,34,35,21,15,16,31,19,28,20,26,32,36,37,18,27,30,25,23,24,17,22,33,29,34,35,21,15,16,31,19,28,20,26,32,36,37,18,27,30,25,23,24,17,22,33,29,34,35,21,15,16,31,19,28,20,26,32,36,37,18,27,30,25,23,24,17,22,33,29,38,39,39,38],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["certificate",3]]],[[],["socketaddr",4]],[[],["bitslice",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["result",6],["builder",3],["endpoint",3]]],[[],["builder",3]],[[],["certificate",3]],[[],["option",4]],[[],["certificate",3]],[[],["privatekey",3]],[[],["keypair",3]],[[],["receiver",3]],[[],["sender",3]],[[],["connection",3]],[[],["store",4]],[[],["endpoint",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["certificate",3]],["ordering",4]],[[["privatekey",3]],["ordering",4]],[[["keypair",3]],["ordering",4]],[[["store",4]],["ordering",4]],[[["str",15],["asref",8]]],[[["certificate",3],["keypair",3],["option",4],["str",15],["asref",8]]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[],["bool",15]],[[],[["vec",3],["string",3]]],[[]],[[["certificate",3]],["bool",15]],[[["privatekey",3]],["bool",15]],[[["keypair",3]],["bool",15]],[[["store",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["vec",3],["u8",15]],["result",6]],[[["vec",3],["u8",15]],["result",6]],[[["privatekey",3],["certificate",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[],[["vec",3],["u8",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],[["result",6],["error",3],["socketaddr",4]]],[[["certificate",3]],["bool",15]],[[["privatekey",3]],["bool",15]],[[["keypair",3]],["bool",15]],[[]],[[],[["result",6],["error",3]]],[[["into",8],["string",3]]],[[["keypair",3],["u16",15]],[["result",6],["error",3]]],[[]],[[["certificate",3]],[["ordering",4],["option",4]]],[[["privatekey",3]],[["ordering",4],["option",4]]],[[["keypair",3]],[["ordering",4],["option",4]]],[[["store",4]],[["ordering",4],["option",4]]],[[]],[[],[["vec",3],["option",4]]],[[["context",3],["pin",3]],[["option",4],["poll",4]]],[[["context",3],["pin",3]],[["option",4],["poll",4]]],[[["context",3],["pin",3]],[["option",4],["poll",4]]],[[],["privatekey",3]],[[]],[[],[["option",4],["vec",3]]],[[]],[[],["socketaddr",4]],[[],[["result",6],["sender",4]]],[[],["result",4]],[[["serializer",8]],["result",6]],[[["serializer",8]],["result",6]],[[],["result",4]],[[],["option",4]],[[["socketaddr",4]]],[[["keypair",3],["option",4]]],[[["bool",15]]],[[["bool",15]]],[[["into",8],["vec",3]]],[[["keypair",3],["option",4]]],[[["store",4]]],[[["bool",15]]],[[],["store",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["context",3],["pin",3]],[["poll",4],["option",4]]],[[["context",3],["pin",3]],[["poll",4],["option",4]]],[[]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["vec",3],["u8",15]]],[[["vec",3],["u8",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["certificate",3]]],[[]],[[],[["vec",3],["u8",15]]],[[["serializer",8]],["result",6]],[[["serializer",8]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["x509error",4],["errorkind",4]],["x509error",4]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],["alreadyclosed",3]],[[],["addrparseerror",3]],[[],["error",4]],[[],["err",4]],[[],["readerror",4]],[[],["writeerror",4]],[[],["connectionerror",4]],[[],["connecterror",4]],[[],["resolveerror",3]],[[],["parseerror",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["err",4]],["err",4]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[["addrparseerror",3]],["bool",15]],[[["error",4]],["bool",15]],[[["x509error",4]],["bool",15]],[[["err",4]],["bool",15]],[[["readerror",4]],["bool",15]],[[["writeerror",4]],["bool",15]],[[["connectionerror",4]],["bool",15]],[[["connecterror",4]],["bool",15]],[[["parseerror",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[]],[[]],[[["ioerror",3]]],[[["connecterror",4]]],[[["resolveerror",3],["box",3]]],[[]],[[]],[[]],[[["connectionerror",4]]],[[]],[[["sender",4]]],[[]],[[["errorkind",4]]],[[["readerror",4]]],[[]],[[["box",3],["errorkind",4]]],[[]],[[["alreadyclosed",3]]],[[["writeerror",4]]],[[]],[[]],[[["error",3]],["error",3]],[[["asn1error",3]],["error",3]],[[["protoerror",3]],["error",3]],[[]],[[["connectionerror",4]],["error",3]],[[["elapsed",3]],["error",3]],[[["resolveerror",3]],["error",3]],[[["readerror",4]],["error",3]],[[["writeerror",4]],["error",3]],[[["joinerror",3]],["error",3]],[[["error",3]],["error",3]],[[["error",3]],["error",3]],[[["intoinnererror",3]],["error",3]],[[["nulerror",3]],["error",3]],[[["errorkind",4]],["error",3]],[[]],[[]],[[["errorkind",4]],["x509error",4]],[[["bererror",4]],["x509error",4]],[[]],[[["bererror",4]],[["bererror",4],["err",4]]],[[]],[[["x509error",4]],[["err",4],["x509error",4]]],[[]],[[]],[[["readableerror",4]],["readerror",4]],[[]],[[]],[[["error",3]],["connectionerror",4]],[[["close",4]],["connectionerror",4]],[[]],[[]],[[["error",3]],["resolveerror",3]],[[["string",3]],["resolveerror",3]],[[["str",15]],["resolveerror",3]],[[["protoerror",3]],["resolveerror",3]],[[["poisonerror",3]],["resolveerror",3]],[[["resolveerrorkind",4]],["resolveerror",3]],[[["errors",3]],["parseerror",4]],[[]],[[["errorkind",4]],["x509error",4]],[[["i32",15]],["error",3]],[[["bool",15],["dnsresponse",3]],[["result",4],["dnsresponse",3],["resolveerror",3]]],[[],[["error",8],["option",4]]],[[],[["option",4],["error",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4],["box",3]]],[[],["bool",15]],[[],["errorkind",4]],[[],["resolveerrorkind",4]],[[],["error",3]],[[],["err",4]],[[],["err",4]],[[["addrparseerror",3]],["bool",15]],[[["x509error",4]],["bool",15]],[[["err",4]],["bool",15]],[[["readerror",4]],["bool",15]],[[["writeerror",4]],["bool",15]],[[["connectionerror",4]],["bool",15]],[[["connecterror",4]],["bool",15]],[[["errorkind",4]],["error",3]],[[],[["i32",15],["option",4]]],[[],["bool",15]],[[],[["error",8],["option",4]]],[[],[["error",8],["option",4]]],[[],[["error",8],["option",4]]],[[],[["error",8],["option",4]]],[[],[["error",8],["option",4]]],[[],[["error",8],["option",4]]],[[],[["error",8],["option",4]]],[[],[["error",8],["option",4]]],[[],[["error",8],["option",4]]],[[],[["error",8],["option",4]]],[[],[["error",8],["option",4]]],[[],[["error",8],["option",4]]],[[]],[[]],[[]],[[]],[[],["err",4]],[[],["err",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null],"p":[[4,"Store"],[3,"Incoming"],[3,"Connecting"],[3,"Builder"],[3,"Certificate"],[3,"PrivateKey"],[3,"KeyPair"],[3,"Receiver"],[3,"Sender"],[3,"Connection"],[3,"Endpoint"],[8,"Builder"],[8,"PrivateKey"],[8,"KeyPair"],[3,"Connection"],[3,"Connecting"],[4,"ConnectionError"],[4,"WebPkiError"],[4,"Incoming"],[4,"Sender"],[4,"Connect"],[4,"ConnectError"],[4,"ReadError"],[4,"WriteError"],[4,"ErrorKind"],[4,"Error"],[4,"X509Error"],[4,"Receiver"],[4,"UrlParseError"],[4,"Err"],[4,"Stream"],[4,"ParseCertificate"],[3,"ResolveError"],[3,"AlreadyClosed"],[3,"Builder"],[3,"IoError"],[3,"AddrParseError"],[13,"ParseCertificate"],[13,"DanglingCertificate"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};