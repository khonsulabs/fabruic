initSidebarItems({"enum":[["CertificateError","Error constructing `Certificate` with `Certificate::from_der`."],["Config","Configuration error."],["Connect","Error connecting to a server with `Endpoint::connect`."],["ConnectError","Errors in the parameters being used to create a new connection"],["Connecting","Error completing connection with peer with `Incoming::type` or `Incoming::accept`."],["ConnectionError","Reasons why a connection might be lost"],["Err","The `Err` enum indicates the parser was not successful"],["Error","An error that occurs during certificate validation or name validation."],["ErrorKind","The kind of error that can be produced during a serialization or deserialization."],["Incoming","Error receiving type information from `Incoming` stream."],["OsStore","Error aquiring or parsing root certs from OS."],["ParseError","Errors that can occur during parsing."],["ReadError","Errors that arise from reading from a stream."],["Receiver","Error receiving a message from a `Receiver`."],["Sender","Error sending a message to a `Sender`."],["Stream","Error opening a new stream to peer with `Connection::open_stream`."],["WriteError","Errors that arise from writing to a stream"],["X509Error","An error that can occur while parsing or validating a certificate."]],"struct":[["AlreadyClosed","Attempting to close something that is already closed."],["Builder","Error during construction of `Endpoint` with `Builder::build`."],["Certificate","Error constructing `Certificate` with `Certificate::from_der`."],["CertificateChain","Failed to verify the certificate chain with `CertificateChain::from_certificates`."],["Connection","Error receiving stream from peer with `Stream` on from `Connection`."],["KeyPair","Failed to pair given `CertificateChain` and `PrivateKey` with `KeyPair::from_parts`."],["PrivateKey","Failed to parse the given private key with `PrivateKey::from_der`."],["ResolveError","The error type for errors that get returned in the crate"]]});