(function() {var implementors = {};
implementors["fabruic"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"fabruic/struct.Certificate.html\" title=\"struct fabruic::Certificate\">Certificate</a>","synthetic":false,"types":["fabruic::x509::certificate::Certificate"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"fabruic/struct.PrivateKey.html\" title=\"struct fabruic::PrivateKey\">PrivateKey</a>","synthetic":false,"types":["fabruic::x509::private_key::PrivateKey"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"fabruic/struct.KeyPair.html\" title=\"struct fabruic::KeyPair\">KeyPair</a>","synthetic":false,"types":["fabruic::x509::KeyPair"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"fabruic/error/struct.AlreadyClosed.html\" title=\"struct fabruic::error::AlreadyClosed\">AlreadyClosed</a>","synthetic":false,"types":["fabruic::error::AlreadyClosed"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"fabruic/struct.Receiver.html\" title=\"struct fabruic::Receiver\">Receiver</a>&lt;T&gt;","synthetic":false,"types":["fabruic::quic::connection::receiver::Receiver"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.125/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"fabruic/struct.Sender.html\" title=\"struct fabruic::Sender\">Sender</a>&lt;T&gt;","synthetic":false,"types":["fabruic::quic::connection::sender::Sender"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.125/serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a> + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.125/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"fabruic/struct.Connection.html\" title=\"struct fabruic::Connection\">Connection</a>&lt;T&gt;","synthetic":false,"types":["fabruic::quic::connection::Connection"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"fabruic/enum.Store.html\" title=\"enum fabruic::Store\">Store</a>","synthetic":false,"types":["fabruic::quic::endpoint::builder::Store"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"fabruic/struct.Endpoint.html\" title=\"struct fabruic::Endpoint\">Endpoint</a>","synthetic":false,"types":["fabruic::quic::endpoint::Endpoint"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()